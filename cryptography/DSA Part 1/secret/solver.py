from Crypto.Util.number import *
from sympy import *
from random import *

# Atk Method
def attack(r, s, H, k, q):
    x = (s * k - H) * pow(r, -1, q) % q
    return x

# Decryption Method
def msg_dec(c, x):
    e = 65537
    phi = x - 1
    d = inverse(e, phi)
    return pow(c, d, x)

def write(data):
    with open("solve.txt", "a") as file:
        file.write(f'{str(data)} \n')

p, r, s, H = (11528773217007799583380286326438573243662452433920622536467274906051193387125915213405073692049823863770717317372746435586194785895002408873414607528860891, 1, 5934033460043254524710860226737385054237136064606390445106834121375124846840573501873774975475482158114093669060616423413132559046422409132078404195822494, 5765762176325186138793438365100716493887730221062389194923005783371679535168109105981058801240255120345402806024626656098995725717736010721077410557634586)

q = nextprime(p)
for k in range(q - p + 1):
    x = attack(r, s, H, k, q)
    write(long_to_bytes(msg_dec(H, x)))